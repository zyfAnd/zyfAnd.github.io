<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Duzhang</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-09-07T07:28:56.002Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zyf&amp;&amp;JJ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法学习</title>
    <link href="http://yoursite.com/2016/09/06/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%96%90%E6%B3%A2%E6%8B%89%E5%A5%91/"/>
    <id>http://yoursite.com/2016/09/06/算法学习之递归算法学习之斐波拉契/</id>
    <published>2016-09-06T13:56:45.000Z</published>
    <updated>2016-09-07T07:28:56.002Z</updated>
    
    <content type="html"><![CDATA[<p>输出Fibonacci的第n项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public int  fibonacci(int n)</div><div class="line">&#123;</div><div class="line">if(n&lt;0) return 0;</div><div class="line">  if(n&lt;=2) return 1;</div><div class="line">  else&#123;</div><div class="line">      return fibonacci(n-1)+fibonacci(n-2);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>但是这种递归方法的时间复杂度太高</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">public int fibonacci_01(int n)</div><div class="line">&#123;</div><div class="line">    if(n&lt;0) return 0;</div><div class="line">    else if((n&lt;=2) return 1;</div><div class="line">    else</div><div class="line">    &#123;</div><div class="line">               int a = 1,b = 1,c = 0;</div><div class="line">       for(int i = 0;i&lt;=n;i++)</div><div class="line">       &#123;</div><div class="line">          c = a + b;</div><div class="line">          a = b;</div><div class="line">         b = c;</div><div class="line">       &#125;</div><div class="line">       return c;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样改变之后时间复杂度就变成了O(n)了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;输出Fibonacci的第n项&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>你好世界</title>
    <link href="http://yoursite.com/2016/09/06/hello-world/"/>
    <id>http://yoursite.com/2016/09/06/hello-world/</id>
    <published>2016-09-06T13:12:15.707Z</published>
    <updated>2016-09-06T14:48:32.678Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
